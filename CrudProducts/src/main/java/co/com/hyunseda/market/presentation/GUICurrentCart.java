package co.com.hyunseda.market.presentation;

import co.com.huynseda.microkernel.common.entities.Cart;
import co.com.huynseda.microkernel.common.entities.Product;
import co.com.hyunseda.infra.Observer;
import co.com.hyunseda.market.service.CartService;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class GUICurrentCart extends javax.swing.JFrame implements Observer {

    /**
     * Creates new form GUICurrentCart
     */
    public GUICurrentCart() {
        initComponents();
        initializeTable();
    }

    private void initializeTable() {
        tblCarrito.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Id", "Name", "Description", "Amount", "Price"
                }
        ));
    }

    private List<Product> enviarProductos() {
        List<Product> productList = new ArrayList<>();

        // Iterar sobre las filas de la tabla
        for (int i = 0; i < tblCarrito.getRowCount(); i++) {
            Long id = (Long) tblCarrito.getValueAt(i, 0);
            String name = (String) tblCarrito.getValueAt(i, 1);
            String description = (String) tblCarrito.getValueAt(i, 2);
            int quantity = (int) tblCarrito.getValueAt(i, 3);
            Double price = (Double) tblCarrito.getValueAt(i, 4);

            // Crear un objeto Product con los datos de la fila y agregarlo a la lista
            Product product = new Product(id, name, description, quantity, price);
            productList.add(product);
        }
        return productList;
    }

    private int valorTotal() {
        int suma = 0;
        for (int i = 0; i < tblCarrito.getRowCount(); i++) {
            int quantity = (int) tblCarrito.getValueAt(i, 3);
            double price = (double) tblCarrito.getValueAt(i, 4);
            int aux = (int) (quantity * price); // Assuming total value is an integer
            suma += aux;
        }
        return suma;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCarrito = new javax.swing.JTable();
        btnPagar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtCarrito = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mi carrito de compras");

        tblCarrito.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblCarrito);

        btnPagar.setText("Pagar");
        btnPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");

        txtCarrito.setColumns(20);
        txtCarrito.setRows(5);
        jScrollPane2.setViewportView(txtCarrito);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnPagar)
                        .addGap(46, 46, 46)
                        .addComponent(btnCancelar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(135, 135, 135))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPagar)
                    .addComponent(btnCancelar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagarActionPerformed
        GUIPaySimulated instance = new GUIPaySimulated(valorTotal());
        instance.setVisible(true);
    }//GEN-LAST:event_btnPagarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        txtCarrito.append("Cualquier cosa");
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUICurrentCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUICurrentCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUICurrentCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUICurrentCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUICurrentCart().setVisible(true);
            }
        });
    }

    private void fillTable(Cart cart) {
        txtCarrito.append("Texto inicial");
        initializeTable();
        //DefaultTableModel model = (DefaultTableModel) tblCarrito.getModel();
        DefaultTableModel model = new DefaultTableModel();

        Object rowData[] = new Object[5];
        String srtCar = "";
        
        for (int i = 0; i < cart.getProductos().size(); i++) {
            rowData[0] = cart.getProductos().get(i).getProductId();
            rowData[1] = cart.getProductos().get(i).getName();
            rowData[2] = cart.getProductos().get(i).getDescription();
            rowData[3] = cart.getNroProductos();
            rowData[4] = cart.getProductos().get(i).getPrice();

            model.addRow(rowData);
            srtCar = srtCar + rowData[0] + " " + rowData[1] + " " + rowData[2] + " \n";
            
        }
        //tblCarrito.setModel(model);
        txtCarrito.append(srtCar);
        //JOptionPane.showMessageDialog(this, srtCar, "Contenido del carrito",JOptionPane.INFORMATION_MESSAGE);
        //txtCarrito.paintImmediately(txtCarrito.getBounds());
        //tblCarrito.paintImmediately(txtCarrito.getBounds());
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnPagar;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblCarrito;
    private javax.swing.JTextArea txtCarrito;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Object o) {
        CartService service = (CartService) o;
        fillTable(service.getCart());
    }
}
